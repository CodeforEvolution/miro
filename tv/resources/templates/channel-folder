<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      eventCookie="@@@eventCookie@@@" dtvPlatform="@@@dtvPlatform@@@">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    <link href="resource:css/main.css" rel="stylesheet" type="text/css" />
    <t:include filename="dynamic.js" />
    <script type="text/javascript" src="resource:templates/shide.js" />
    <script type="text/javascript" src="resource:templates/osxdnd.js" />
    <script type="text/javascript" src="resource:templates/channel.js" />
    <t:execOnLoad><![CDATA[
folder = views.channelFolders.getObjectByID(int(kargs['id']))
allFeeds = views.feeds.filterWithIndex(indexes.byFolder, folder)

global searchTerm
searchTerm = None

allItems = views.items.filterWithIndex(indexes.itemsByChannelFolder, folder)
matchingItemsUnsorted = allItems.filter(lambda x: filters.matchingItems(x, searchTerm))
matchingItems = matchingItemsUnsorted.sort(sorts.item)
downloadingItems = matchingItems.filter(filters.downloadingItems)
thisFolderView = views.channelFolders.filter(lambda x: x is folder)
childrenView = views.feeds.filterWithIndex(indexes.byFolder, folder)
watchableItems = matchingItems.filter(filters.watchableItems,sortFunc=sorts.itemsUnwatchedFirst)

matchingItems.createIndex(indexes.itemsByChannelCategory)
def makeStateView(cat):
    view = matchingItems.filterWithIndex(indexes.itemsByChannelCategory, cat)
    return view.sort(sorts.item)
newItems = makeStateView('new')
unwatchedItems = makeStateView('newly-downloaded')
expiringItems = makeStateView('expiring')
savedItems = makeStateView('saved')

if newItems.len() == unwatchedItems.len() == expiringItems.len() == savedItems.len() == 0:
    mainChannelbarAvailableDisplay = mainMatchingDisplay = "block"
    newVideosDisplay = showMoreVideosDisplay = "none"
else:
    mainChannelbarAvailableDisplay = mainMatchingDisplay = "none"
    newVideosDisplay = showMoreVideosDisplay = "block"

def updateSearchString(newSearch):
    global searchTerm
    if len(newSearch) == 0:
        searchTerm = None
    else:
        searchTerm = newSearch
    allItems.recomputeFilter(matchingItemsUnsorted)

for feed in allFeeds:
    feed.updateIcons()
]]>

isFolder = True
    </t:execOnLoad>
    <t:execOnUnload><![CDATA[
matchingItemsUnsorted.unlink()
thisFolderView.unlink()
for feed in allFeeds:
    if feed.idExists():
        feed.markAsViewed()
]]>
    </t:execOnUnload>
</head>

<body dragdesttype="channel"
	dragdestdata="channelfolder-***folder.getID()***"
	drageffectchannel="move"
	onkeydown="sendKeyToSearchBox(event);">
<div id="main-titlebar">
    <img id="main-titlebar-avatar" src="resource:images/folder-icon.png" alt="" />
    <div id="main-titlebar-channelname">
        <div t:updateForView="thisFolderView">
            <h1 t:replaceMarkup="folder.getTitle()" />
        </div>
    </div>
    <div id="main-titlebar-tasks">
        <div id="main-titlebar-tasks-search">
            <input id="search-box" type="search" placeholder="Search Folder" class="main-titlebar-tasks-search" onfocus="startEditSearch(this, showAllVideos)" onblur="endEditSearch()" />
        </div>
    </div>
</div>
<div id="main-container">
    <t:includeTemplate filename="channel-content" />
</div>
<div t:updateForView="childrenView">
<div t:showIf="childrenView.len() == 0">
    <div class="channel-blank">
    <div class="channel-message" i18n:translate="">
        Empty Channel Folder
    </div>
    <div class="channel-message small" i18n:translate="">
        Drag channels to this folder to add them.
    </div>
    </div>
</div>
</div>
</body>
</html>
