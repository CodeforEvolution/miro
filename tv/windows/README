======
README
======

:Author: Will Kahn-Greene <will.guaraldi at pculture dot org>
:Date: March 5, 2011


Summary
=======

This is the Gtk-Windows port of Miro.

Instructions and build requirements are documented at
https://develop.participatoryculture.org/index.php/WindowsBuildDocs

All shell scripts are written for cygwin, but otherwise cygwin is not
required to build Miro.  Having said that, we exclusively use cygwin
bash and don't actively support other environments.

If you have problems, visit us on ``#miro-hackers`` on
``irc.freenode.net``.


Setting up a build environment
==============================

Follow the instructions at:
https://develop.participatoryculture.org/index.php/WindowsBuildDocs

That sets up Visual Studio 2008, Python, and the rest of the build
environment.

.. Note::

   We don't support mingw or the gcc compiler for Miro on Windows.  We
   only support Visual Studio 2008 Express with Python from
   python.org.

   We would love to get help switching to mingw.  If you're interested
   in helping out, please let us know.


Build and run
=============

To compile and run Miro in the current directory, do::

   ./run.sh

If you have the required dependencies, it should build Miro and run
it logging stuff to stdout in your console.

See
https://develop.participatoryculture.org/index.php/WindowsBuildDocs
for more information on building and executing the Gtk-Windows
platform code.  The information at this url is considered the
authoritative source.


To run the unit tests
=====================

Do::

    ./test.sh


To build a Miro installer
=========================

To build an installer, do::

    python setup.py bdist_nsis

That'll build Miro, then wrap it in a NullSoft installer.  The
resulting files will be something like::

    dist\Miro-2.0-git-twostage.exe
    dist\Miro-2.0-git.exe

The second one is the "full" installer.
