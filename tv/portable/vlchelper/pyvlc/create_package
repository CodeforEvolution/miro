#! /bin/sh

usage="Syntax: fakeroot $0 debian-directory compilation-directory"

dir=$1
if [ -z "$dir" ]
then
  echo $usage
  exit 1
fi

source=$2
if [ -z "$dir" ]
then
  echo $usage
  exit 1
fi

if [ `id -u` -ne 0 ]
then
  echo "Run this script under fakeroot !"
  echo $usage
  exit 1
fi

if [ ! -f "${dir}/control" ]
then
  echo "$dir contains no debian control file. Aborting."
  exit 1
fi

build="${dir}/build"
if [ -e $build ]
then
  /bin/rm -rf $build
fi

# Create the directory structure
mkdir -p ${build}

# Install the module
python setup.py install --root ${build}

# Dirty hack: rebuild the vlc.so file with the correct shared libs
gcc -pthread -shared build/temp.linux-i686-2.3/vlcmodule.o build/temp.linux-i686-2.3/mediacontrol-init.o build/temp.linux-i686-2.3/mediacontrol-core.o /usr/lib/libtheora.a /usr/local/lib/libx264.a -L/usr/lib/vlc -L/usr/lib -lvlc -lrt -ldl -lpthread -lm -li420_rgb_mmx -li420_yuy2_mmx -li420_ymga_mmx -li422_yuy2_mmx -lfaad -lavcodec -lavformat -lhal -ldbus-1 -ltheora -lx264 -lfaad -lffmpeg -lpostproc -lmemcpymmx -lmemcpymmxext -lmemcpy3dn /usr/local/lib/libfaad.a /usr/lib/libtheora.a /usr/local/lib/libx264.a -lavcodec -o build/lib.linux-i686-2.3/vlc.so -fpic -fPIC

cp build/lib.linux-i686-2.3/vlc.so ${build}/usr/lib/python2.3/site-packages

# EODH

mkdir -p ${build}/usr/lib/vlc/video_output
mkdir -p ${build}/usr/share/doc/python-vlc

# FIXME
# Copy the files into the directory structure
#cp ${source}/modules/video_output/libsnapshot_plugin.so ${build}/usr/lib/vlc/video_output

cp ${dir}/copyright ${build}/usr/share/doc/python-vlc
cp ${source}/README ${build}/usr/share/doc/python-vlc

# Copy debian control information into the tree
mkdir ${build}/DEBIAN
chmod 0755 ${build}/DEBIAN
cp ${dir}/control ${build}/DEBIAN

# Fix permissions
chmod -R a+rX ${build}

# The tree is populated. We can create the package
dpkg-deb --build ${build} ${dir}

/bin/rm -rf ${build}

