#!/usr/bin/env python2.4

import os.path
import sys
import optparse

import pygtk
pygtk.require('2.0')

import democracy
# Make sure democracy modules are on the search path
sys.path.insert(0, os.path.abspath(os.path.dirname(democracy.__file__)))

usage = "usage: %prog [options] [torrent files] [video files]"
parser = optparse.OptionParser(usage=usage)
parser.add_option('--unittest', dest='unittest', default=False,
    action='store_true', 
    help='run unittests instead of launching the program')
parser.add_option('-v', '--version', dest='version', default=False,
    action='store_true', help='print version info')
parser.add_option('--profile', metavar='FILE', help='write profiling information to FILE')
parser.add_option('--bias', metavar='BIAS', help='set profiling bias to BIAS', type=float, default=None)
(options, args) = parser.parse_args()

def startapp():
    import singleclick
    singleclick.setCommandLineArgs(args)
    import app
    app.main()

if options.unittest:
    # Remove all the democracy unittest specific args
    for count in range(len(sys.argv)):
        if sys.argv[count] == '--unittest':
            del sys.argv[count]
            break

    import app
    import unittest
    import test
    unittest.main(module=test)
elif options.version:
    print "Democracy Player"
    print "Version: 0.8.2a-rc2"
    print ""
    print "Democracy Player comes with ABSOLUTELY NO WARRANTY."
    print "This is free software, and you are welcome to redistribute it"
    print "under certain conditions.  See license.txt for details."
elif options.profile:
    import profile
    def main():
        import app
        app.main()
    if (options.bias):
        profile.Profile.bias = options.bias
    profile.run ('main()', options.profile)
else:
    import dbus
    import onetime
    try:
        onetime.OneTime()
        startapp()
    except dbus.NameExistsException:
        bus = dbus.SessionBus()
        proxy_obj = bus.get_object('org.participatoryculture.dtv.onetime', '/org/participatoryculture/dtv/OneTime')
        iface = dbus.Interface(proxy_obj, 'org.participatoryculture.dtv.OneTimeIface')

        dbusargs = dbus.Array(args, signature="s")

        iface.HandleArgs(dbusargs)
