Contained in this directory is the debian/ directory that we use to build the
Debian packages.  Here's how to use it:

0) Run apt-get upgrade, we should only be building for systems with the latest
   updates.

1) Install the debhelper, fakeroot and cdbs packages:
   $ sudo apt-get install debhelper fakeroot cdbs

2) Add a new entry to debian-[distro-name]/changelog, use the previous entries 
   as your template.
   Make sure you change the version number.  The version number is the version
   number from above + "-1ubuntupcf".  If you make 2 Ubuntu packages for the
   same release, name the second one "-2ubuntupcf".
   Example: 0.9.2.2-1ubuntupcf
   
   Make sure your date string is in RFC-2822 format.  Use "date -R".

3) Run build.py [version number] [distro name] [source tarball url/path]

   For example:
      build.py 0.9.5 feisty http://example.com/Democracy-0.9.5.tar.gz
      build.py 0.9.9.9-rc0 gutsy http://example.com/Miro-0.9.9.9-rc0.tar.gz
      build.py 0.9.9.9-rc0 gutsy ./Miro-0.9.9.9-rc0.tar.gz

4) If everything goes well, you should have your packages in a directory named
   feisty (or whatever distro name you used).  This includes binary packages,
   source packages and changelog files.  If things go wrong, you need to
   update the way packages get built, but that's outside the scope of this
   README.

5) To create an apt repository, combine all the .deb packages for one distro
   into a single dir.

   For Ubuntu, this includes packages for i386 and amd64 as well as packages 
   for the previous version.  

   Then run:

   apt-ftparchive packages <directory> | gzip > <directory>/Packages.gz
   apt-ftparchive sources <directory> | gzip > <directory>/Sources.gz

6) Now test the packages manually and via the tools lintian/linda:
   - $ apt-get install lintian linda
     $ lintian -i -I *.changes
     $ linda -i *.changes
     (Not all warnings are critical, though)

   - $ sudo dpkg -i miro*deb
     $ miro

7) Once the build and the package itself works, clean up the debian/ directory:

   $ fakeroot debian/rules clean

   Then check in the updated debian/ directory to svn.
